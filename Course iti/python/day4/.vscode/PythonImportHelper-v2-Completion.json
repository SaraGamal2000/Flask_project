[
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Human",
        "kind": 6,
        "importPath": "class",
        "description": "class",
        "peekOfCode": "class Human:\n    def _init_(self,name,age):\n        # Instance variables\n        self.name = name\n        self.age = age\n    # Instance method\n    def message(self):\n        print('hellow',self.name)\n    #class method\n    @staticmethod",
        "detail": "class",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "class",
        "description": "class",
        "peekOfCode": "class Employee:\n    company_name = 'Betik'\n    def __init__(self, id,name,salary):\n        self.id = id\n        self.name = name\n        self.salary = salary\n    def display_info(self):\n        print(f'Employee: {self.id}')\n        print(f'Age: {self.name}')\n        print(f'Position: {self.salary}')",
        "detail": "class",
        "documentation": {}
    },
    {
        "label": "connectdb",
        "kind": 2,
        "importPath": "db_connection",
        "description": "db_connection",
        "peekOfCode": "def connectdb():\n    try:\n       conn = psycopg2.connect(host=host, user=user,dbname=dbname,password=password)\n       print(f'the connect succees with {dbname}')\n       return conn\n    except :\n        print(\"check the connection\",e)\ndef insert(id,name,age,track_id):\n    connec=connectdb()\n    query='INSERT INTO trainee (id, name, age, track_id) VALUES (%s, %s, %s, %s)'",
        "detail": "db_connection",
        "documentation": {}
    },
    {
        "label": "insert",
        "kind": 2,
        "importPath": "db_connection",
        "description": "db_connection",
        "peekOfCode": "def insert(id,name,age,track_id):\n    connec=connectdb()\n    query='INSERT INTO trainee (id, name, age, track_id) VALUES (%s, %s, %s, %s)'\n    try:\n        cur=connec.cursor()\n        cur.execute(query,(id,name, age, track_id))\n        connec.commit()\n        print('insetion done')\n    except Exception as e :\n      print(\"check the error\",e)",
        "detail": "db_connection",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "db_connection",
        "description": "db_connection",
        "peekOfCode": "def update(id,name,age,track_id):\n    connec=connectdb()\n    query='UPDATE trainee SET name = %s,age = %s, track_id = %s WHERE id = %s'\n    try:\n        cur=connec.cursor()\n        cur.execute(query,(name,age,track_id,id))\n        connec.commit()\n        print('update done')\n    except Exception as e :\n      print(\"check the error\",e)",
        "detail": "db_connection",
        "documentation": {}
    },
    {
        "label": "select",
        "kind": 2,
        "importPath": "db_connection",
        "description": "db_connection",
        "peekOfCode": "def select():\n    connec=connectdb()\n    query=f'select * from trainee'\n    try:\n        cur=connec.cursor()\n        cur.execute(query)\n        traineedata=cur.fetchall()\n        print(traineedata)\n        return traineedata\n    except:",
        "detail": "db_connection",
        "documentation": {}
    },
    {
        "label": "drop_column",
        "kind": 2,
        "importPath": "db_connection",
        "description": "db_connection",
        "peekOfCode": "def drop_column(column_name):\n    connec=connectdb()\n    query=f'ALTER TABLE trainee DROP COLUMN {column_name}'\n    try:\n        cur=connec.cursor()\n        cur.execute(query)\n        print('the drop done')\n        connec.commit() \n    except Exception as e:\n        print('faild to drop',e)",
        "detail": "db_connection",
        "documentation": {}
    }
]